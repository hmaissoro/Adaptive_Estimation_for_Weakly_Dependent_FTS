% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_generateFTS.R
\name{simulate_far}
\alias{simulate_far}
\title{Functional Autoregressive process of order 1 (FAR(1)) simulation}
\usage{
simulate_far(
  N = 2L,
  lambda = 70L,
  tdesign = "random",
  Mdistribution = rpois,
  tdistribution = runif,
  tcommon = seq(0.2, 0.8, len = 50),
  hurst_fun = hurst_logistic,
  L = 4,
  far_kernel = function(s, t) 9/4 * exp(-(t + 2 * s)^2),
  far_mean = function(t) 4 * sin(1.5 * pi * t),
  int_grid = 100L,
  burnin = 100L,
  remove_burnin = TRUE
)
}
\arguments{
\item{N}{\code{integer}. Number of curves.}

\item{lambda}{\code{integer}. Mean of the number of observations per curve.}

\item{tdesign}{\code{character}. Type of the design. It is either 'random' or 'common'.}

\item{Mdistribution}{\code{function}. Distribution of the number of observation points per curve.
The first argument of the function must correspond to \code{N} and the second to \code{lambda}.
Default \code{Mdistribution = rpois}.}

\item{tdistribution}{\code{function (or NULL)}. Observation point distribution if \code{tdesign = 'random'} and \code{NULL} otherwise.}

\item{tcommon}{\code{vector (float)}. Observation point vector if \code{tdesign = 'common'}.
If \code{tdesign = 'random'} and if we want to run some tests at a particular observation position, this can also be specified.}

\item{hurst_fun}{\code{function}. Hurst function. It can be \code{\link{hurst_arctan}}, \code{\link{hurst_linear}}, \code{\link{hurst_logistic}}.}

\item{L}{\code{float (positive)}. HÃ¶lder constant.}

\item{far_kernel}{\code{function}. Kernel function of the operator of the FAR(1).}

\item{far_mean}{\code{function}. Mean function of the FAR(1).}

\item{int_grid}{\code{integer}. Length of the grid used to approximate the integral.}

\item{burnin}{\code{integer}. Burnin period of the FAR(1).}

\item{remove_burnin}{\code{boolean}. If \code{TRUE}, burnin period is removed.}
}
\value{
A \code{data.table} containing 3 column :
\itemize{
   \item{id_curve :}{ Index of the curve. It goes from 1 to N.}
   \item{tobs :}{ Sampled observation points, for each \code{id_curve}.}
   \item{ttag :}{ Tag on the observations points, for each \code{id_curve}. It is either \code{tcommon} for common design grid or \code{tcommon} pour random design.}
   \item{far_mean :}{ The mean of the process evaluate at \code{tobs}, for each \code{id_curve}.}
   \item{X :}{ The process observed at tobs, for each \code{id_curve}.}
}
}
\description{
Functional Autoregressive process of order 1 (FAR(1)) simulation
}
\examples{

\dontrun{
dt_far <- simulate_far(N = 2L, lambda = 70L,
                       tdesign = "random",
                       Mdistribution = rpois,
                       tdistribution = runif,
                       tcommon = seq(0.2, 0.8, len = 50),
                       hurst_fun = hurst_logistic,
                       L = 4,
                       far_kernel = function(s,t) 9/4 * exp(- (t + 2 * s) ** 2),
                       far_mean = function(t) 4 * sin(1.5 * pi * t),
                       int_grid = 100L,
                       burnin = 100L,
                       remove_burnin = TRUE)

}

}
