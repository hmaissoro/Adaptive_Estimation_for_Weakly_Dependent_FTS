% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_smoothing.R
\name{estimate_nw}
\alias{estimate_nw}
\title{Nadaraya-Watson estimator}
\usage{
estimate_nw(y, t, tnew, h = NULL, smooth_ker = epanechnikov)
}
\arguments{
\item{y}{\code{vector (numeric)}. A numeric vector containing the observed values of the independent variable corresponding to the observation points \code{t}.}

\item{t}{\code{vector (numeric)}. A numeric vector containing the observed values of the dependent variable.}

\item{tnew}{\code{vector (numeric)}. New \code{t} values at which we want to estimate the regression function.}

\item{h}{\code{numeric (positive)}. The bandwidth parameter such that \code{h > (2 * length(x))}.
Default \code{h = NULL} and such it will be computed automatically.}

\item{smooth_ker}{\code{function}. The kernel function of the estimator.}
}
\value{
A \code{data.table} containing
\itemize{
   \item{h :}{ The bandwidth used to estimate the regression function.}
   \item{inKernelSupp :}{ For each \code{t_i} in \code{tnew}, it is the number of  \code{t} between \code{t_i - h } and \code{t_i + h }.}
   \item{tnew :}{ The vector \code{new}.}
   \item{yhat :}{ The regression function's vector of estimates at \code{tnew}.}
}
}
\description{
Nadaraya-Watson estimator
}
\examples{
\dontrun{
# The model
## Let
m <- function(t) 4 * sin(1.5 * pi * t)

## Observation points
t <- runif(n = 200, min = 0, max = 1)
t <- sort(t)

## Measure error
e <- rnorm(n = 200, mean = 0, sd = 0.2)

## Regression model
y <- m(t) + e

plot(x = t, y = y, main = "Observed points and true regression function")
lines(x = t, y = m(t), type = "l", col = "red")

## Estimate the best bandwidth
bw_grid <- seq(1 / (2 * length(t)), length(t) ** (- 1/3), len = 100)
hbest <- estimate_nw_bw(y = y, t = t,
                        bw_grid = bw_grid,
                        smooth_ker = epanechnikov)

## Estimate the regression function
dt_nw <- estimate_nw(y = y, t = t,
                     tnew = seq(0.01, 0.99, len = 100),
                     h = hbest, smooth_ker = epanechnikov)

plot(x = dt_nw[, tnew], y = dt_nw[, yhat], type = "l", col = "blue",
     main = "Estimated and true regression function.")
lines(x = dt_nw[, tnew], y = m(dt_nw[, yhat]), type = "l", col = "red")
legend(x = 0.64, y = 4.1, fill = c("blue", "red"),legend = c("Estimated m", "True m"))

}

}
\seealso{
[estimate_nw_bw()], [epanechnikov()], [biweight()], [triweight()], [tricube()], [uniform()], etc.
}
